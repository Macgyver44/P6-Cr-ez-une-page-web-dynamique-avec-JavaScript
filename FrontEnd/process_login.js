document.addEventListener("DOMContentLoaded", function () {
  var loginForm = document.getElementById("login-form");

  if (loginForm) {
    // Si le formulaire de connexion existe (sur la page de connexion), ajouter un √©couteur d'√©v√©nements pour la soumission du formulaire
    loginForm.addEventListener("submit", function (event) {
      event.preventDefault(); // Emp√™cher l'envoi du formulaire par d√©faut

      var username = document.getElementById("username").value;
      var password = document.getElementById("password").value;

      console.log("email et mots de passe :", username, password);

      // V√©rifier si l'entr√©e est un email (contient au moins un '@')
      if (!username.includes("@")) {
        document.getElementById("error-message").innerText ="Veuillez entrer une adresse email valide.";
        return; // Arr√™ter l'ex√©cution de la fonction si ce n'est pas un email
      }

      // Envoyer les donn√©es du formulaire √† l'API pour v√©rification
      fetch("http://localhost:5678/api/users/login", {
        method: "POST",
        headers: {
          "Content-Type": "application/json",
        },
        body: JSON.stringify({
          email: username,
          password: password,
        }),
      })

        .then((response) => {
          console.log("R√©ponse de l'API:", response);
          return response.json();
        })

        .then((data) => {
          console.log("Donn√©es de l'API:", data);
          if (data.token) {
            var token = data.token;

            // Sauvegarde du token dans le stockage local (localStorage)
            localStorage.setItem("token", token);
           
            document.getElementById("success-message").innerText ="F√©licitations üëå Vous √™tes connect√© avec succ√®s";
            window.location.href = "index.html";

          } else {
            document.getElementById("error-message").innerText ="Erreur dans l‚Äôidentifiant ou le mot de passe";
            var errorMessageElement = document.getElementById("error-message");
          }
        })

        .catch((error) => {
          console.error("Erreur lors de la requ√™te:", error);
          document.getElementById("error-message").innerText ="Une erreur s'est produite. Veuillez r√©essayer.";
        });
    });

  } else {
    // Si le formulaire de connexion n'existe pas (sur la page d'index), ajouter le code sp√©cifique √† la page d'index

    //LogIn LogOut

    var loginButton = document.getElementById("login-logout");
    console.log("Bonton recuperer dans le DOM:", loginButton);

    var title = document.querySelector("header h1");
    console.log("teste de selection de H1 title :", title);

    // V√©rifier si le token est pr√©sent dans le stockage local
    var token = localStorage.getItem("token");
    console.log("verification presence du TOKEN :", token);
    console.log("Le code JavaScript s'ex√©cute correctement.");

    loginButton.addEventListener("click", function () {
      // Mettre en ≈ìuvre la d√©connexion si l'utilisateur est connect√©
      if (token) {
        // Effacer le token du stockage local
        localStorage.removeItem("token");
        if (!token) {
          console.log("Le token a √©t√© supprim√© avec succ√®s.");
          loginButton.textContent = "Login";

          // Supprimer les √©l√©ments d'√©dition si pr√©sents
          const SectionBar = document.getElementById("editModeBar");
          const EditPen = document.getElementById("EditPen");
          if (SectionBar) {
            SectionBar.remove();
          }
          if (EditPen) {
            EditPen.remove();
          }

        } else {
          console.log("Le token n'a pas √©t√© supprim√©. Mais on va rafra√Æchir la page quand m√™me.");
          window.location.reload();
        }
        
        // Mettre √† jour le texte du bouton
        loginButton.textContent = "Login";
        console.log("L'utilisateur s'est d√©connect√©.");
        

      } else {
        // Rediriger vers la page de connexion si l'utilisateur n'est pas connect√©
        console.log("Redirection vers la page de connexion.");
        window.location.href = "Login.html";
      }
    });

    if (token) {
      // Si le token est pr√©sent, l'utilisateur est connect√©
      console.log("Token trouv√© :", token);
      console.log("L'utilisateur est connect√©.");

      loginButton.textContent = "Logout";
      title.textContent = `Bienvenue`; // Remplacez "User" par le nom d'utilisateur si vous le souhaitez
      
      console.log("verifcation injection Users :", title);
      // Cr√©er le contenu HTML de la barre de mode √©dition
      const editModeBarHTML = `<!-- Barre noire en haut de la page -->
    <div id="editModeBar" class="edit-mode-bar">üìù Mode √âdition</div>`;
      // Ins√©rer la barre de mode √©dition au d√©but du corps du document
      document.body.insertAdjacentHTML("afterbegin", editModeBarHTML);
      // S√©lectionner l'√©l√©ment parent o√π vous souhaitez ins√©rer le contenu HTML
      const portfolioSection = document.getElementById("SectionModif");
      // Cr√©er le contenu HTML de l'√©l√©ment "modifier" et du titre
      const modifyHTML = `<a href="#" onclick="openModal()"id="EditPen">‚úèÔ∏èModifier</a>`;
      // Ins√©rer le contenu HTML juste avant la fin de l'√©l√©ment parent
      portfolioSection.insertAdjacentHTML("afterbegin", modifyHTML);

      let FilterDelete = document.getElementById("FilterDelete");
      if (FilterDelete) {
        FilterDelete.remove();
      }
      console.log("verifcation de la variable FilterDelete :", FilterDelete);

      
    } else {
      // Si le token n'est pas pr√©sent, l'utilisateur n'est pas connect√©
      console.log("L'utilisateur n'est pas connect√©.");
      loginButton.textContent = "Login";
    }
  }
});
